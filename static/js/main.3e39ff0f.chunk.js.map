{"version":3,"sources":["components/Clock.jsx","components/Header.jsx","components/Back.jsx","components/ErrorBoundary.jsx","redux/types.js","redux/actions.js","server-url.js","pages/ReadPage.jsx","pages/ErrorPage.jsx","components/TableActionBtns.jsx","components/EditRow.jsx","components/TableBodyRows.jsx","components/SearchField.jsx","components/AddRow.jsx","components/Warning.jsx","components/Table.jsx","components/Main.jsx","pages/HomePage.jsx","redux/reducers.js","redux/store.js","index.jsx","App.jsx"],"names":["Clock","props","state","date","Date","this","timerID","setInterval","tick","clearInterval","setState","toLocaleTimeString","Component","Header","className","Back","to","type","ErrorBoundary","hasError","error","errorInfo","console","log","children","React","DEL_USER","ADD_USER","UPD_USER","SEARCH_USER","GET_USERS","GET_USER","IS_LOADING","IS_SUCCESS","IS_ERROR","RESET","IS_EDITING","SERVER_URL","loading","loadingMsg","payload","resetAlerts","errorFetch","errorMsg","fetchUser","id","dispatch","axios","get","then","res","user","data","catch","message","finally","setTimeout","fetchAllUsers","users","successMsg","successFetch","err","connect","currentUserRx","userReducer","currentUser","isLoadingRx","isLoading","isErrorRx","isError","errorMsgRx","msg","fetchUserRx","url","match","paramsId","Number","params","useEffect","name","username","email","style","listStyle","ErrorPage","TableActionBtns","delUser","editUser","onClick","e","EditRow","handleChangeInput","bind","handleUpdateBtn","handleCancelBtn","target","value","updateUser","onChange","placeholder","TableBodyRows","editing","currentId","addUser","inputValueRx","inputValue","query","AddRow","handleChange","handleClick","preventDefault","nextId","rows","Warning","Table","otherProps","msgRx","length","hasAlert","map","key","uuid","v4","colSpan","Main","status","isEditing","alerts","isEmpty","alertMsg","onDelUser","onAddUser","onEditUser","onUpdateUser","fetchUsersRx","deleteUserRx","prevState","trim","updatedUsers","usersRx","newUser","updateUserRx","addUserRx","filteredUsers","filter","toLowerCase","includes","height","deleteUser","HomePage","initialState","isSuccess","middlewares","thunk","rootReducer","combineReducers","action","store","createStore","applyMiddleware","ReactDOM","render","exact","path","component","ReadPage","document","getElementById"],"mappings":"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","file":"static/js/main.3e39ff0f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Clock extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { date: new Date() };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.timerID = setInterval(() => this.tick(), 500);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n  tick() {\r\n    this.setState({\r\n      date: new Date()\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>{this.state.date.toLocaleTimeString()}</h3>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Clock;\r\n","import React from 'react';\r\nimport Clock from './Clock';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"jumbotron\">\r\n      <div className=\"container\">\r\n        <h1 className=\"display-4\">CRUD using React</h1>\r\n\r\n        <p className=\"lead\">\r\n          Lorem ipsum, dolor sit amet consectetur adipisicing elit. Explicabo,\r\n          veniam?\r\n        </p>\r\n        <Clock />\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Back() {\r\n  return (\r\n    <div className=\"container\">\r\n      <Link to=\"/\" type=\"button\" className=\"btn btn-outline-danger\">\r\n        Back Home\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default class ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    // You can also log the error to an error reporting service\r\n    console.log(error, errorInfo);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      // You can render any custom fallback UI\r\n      return <h1>Something went wrong.</h1>;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n","export const DEL_USER = 'DEL_USER';\r\nexport const ADD_USER = 'ADD_USER';\r\nexport const UPD_USER = 'UPD_USER';\r\nexport const SEARCH_USER = 'SEARCH_USER';\r\nexport const GET_USERS = 'GET_USERS';\r\nexport const GET_USER = 'GET_USER';\r\nexport const IS_LOADING = 'IS_LOADING';\r\nexport const IS_SUCCESS = 'IS_SUCCESS';\r\nexport const IS_ERROR = 'IS_ERROR';\r\nexport const RESET = 'RESET';\r\nexport const IS_EDITING = 'IS_EDITING';\r\n","import axios from 'axios';\r\n\r\nimport { getServerUrl } from '../server-url';\r\nimport {\r\n  DEL_USER,\r\n  ADD_USER,\r\n  UPD_USER,\r\n  SEARCH_USER,\r\n  GET_USERS,\r\n  GET_USER,\r\n  RESET,\r\n  IS_EDITING,\r\n  IS_LOADING,\r\n  IS_SUCCESS,\r\n  IS_ERROR\r\n} from './types';\r\n\r\nconst SERVER_URL = getServerUrl();\r\n\r\n// const URL = 'http://localhost:5000/api/robots';\r\n\r\nexport function loading(loadingMsg = 'Loading...') {\r\n  return {\r\n    type: IS_LOADING,\r\n    payload: loadingMsg\r\n  };\r\n}\r\n\r\nexport function resetAlerts() {\r\n  return {\r\n    type: RESET\r\n  };\r\n}\r\n\r\nexport function errorFetch(errorMsg = 'default Error Msg') {\r\n  return {\r\n    type: IS_ERROR,\r\n    payload: errorMsg\r\n  };\r\n}\r\n\r\nexport function successFetch(successMsg = 'default Success Msg') {\r\n  return {\r\n    type: IS_SUCCESS,\r\n    payload: successMsg\r\n  };\r\n}\r\n\r\nexport function getUser(user) {\r\n  return {\r\n    type: GET_USER,\r\n    payload: user // object\r\n  };\r\n}\r\n\r\nexport function getUsers(users) {\r\n  return {\r\n    type: GET_USERS,\r\n    payload: users // array\r\n  };\r\n}\r\n\r\nexport const fetchUser = (id) => (dispatch) => {\r\n  dispatch(loading());\r\n  // fetch\r\n  axios\r\n    .get(`${SERVER_URL}/${id}`)\r\n    .then((res) => dispatch(getUser(res.data)))\r\n    .catch((error) => {\r\n      console.error(error.message);\r\n      dispatch(errorFetch(error.message));\r\n    })\r\n    .finally(() =>\r\n      // reset alertMsg\r\n      setTimeout(() => {\r\n        dispatch(resetAlerts());\r\n      }, 1500)\r\n    );\r\n};\r\n\r\nexport const fetchAllUsers = () => (dispatch) => {\r\n  // async loading\r\n  dispatch(loading());\r\n\r\n  // fetch\r\n  axios\r\n    .get(SERVER_URL)\r\n    .then((res) => {\r\n      dispatch(getUsers(res.data));\r\n      dispatch(successFetch('Success Fetch'));\r\n    })\r\n    .catch((err) => {\r\n      console.error('ERROR at fetchAllUsers::', err.message);\r\n      dispatch(errorFetch(err.message));\r\n    })\r\n    .finally(() =>\r\n      // reset alertMsg\r\n      setTimeout(() => {\r\n        dispatch(resetAlerts());\r\n      }, 1500)\r\n    );\r\n};\r\n\r\n// CRUD + search\r\n\r\nexport function addUser(user) {\r\n  return {\r\n    type: ADD_USER,\r\n    payload: user\r\n  };\r\n}\r\n\r\nexport function deleteUser(id) {\r\n  return {\r\n    type: DEL_USER,\r\n    payload: id\r\n  };\r\n}\r\n\r\nexport function updateUser(user) {\r\n  return {\r\n    type: UPD_USER,\r\n    payload: user\r\n  };\r\n}\r\n\r\nexport function editing(bool = true) {\r\n  return {\r\n    type: IS_EDITING,\r\n    payload: bool\r\n  };\r\n}\r\n\r\nexport function searchUser(query) {\r\n  return {\r\n    type: SEARCH_USER,\r\n    payload: query\r\n  };\r\n}\r\n","// eslint-disable-next-line import/prefer-default-export\r\nexport function getServerUrl() {\r\n  let serverUrl = '';\r\n\r\n  // deploy frontend to gh-pages\r\n  // server and database to heroku\r\n  if (process.env.NODE_ENV === 'production') {\r\n    // use heroku remote - in production\r\n    serverUrl = 'https://desolate-taiga-56372.herokuapp.com/robots';\r\n  } else {\r\n    // use localhost - in development\r\n    // serverUrl = 'http://localhost:3000';\r\n\r\n    serverUrl = 'http://localhost:5000/api/robots';\r\n  }\r\n  return serverUrl;\r\n}\r\n","import React, { useEffect } from 'react';\r\n// import { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n// action\r\nimport { fetchUser } from '../redux/actions';\r\n\r\n// redux - dispatch\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchUserRx: url => dispatch(fetchUser(url))\r\n  };\r\n};\r\n\r\n// redux - states\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currentUserRx: state.userReducer.currentUser,\r\n    isLoadingRx: state.userReducer.isLoading,\r\n    isErrorRx: state.userReducer.isError,\r\n    errorMsgRx: state.userReducer.msg\r\n  };\r\n};\r\n\r\n// comp\r\nfunction ReadPage({\r\n  fetchUserRx,\r\n  currentUserRx,\r\n  isErrorRx,\r\n  isLoadingRx,\r\n  errorMsgRx,\r\n  match\r\n}) {\r\n  const paramsId = Number(match.params.id);\r\n\r\n  useEffect(() => {\r\n    fetchUserRx(paramsId);\r\n  }, [fetchUserRx, paramsId]);\r\n\r\n  if (isErrorRx) {\r\n    return <div className=\"container\">{errorMsgRx}</div>;\r\n  }\r\n\r\n  if (isLoadingRx || !currentUserRx) {\r\n    return <div className=\"container\">Loading...</div>;\r\n  }\r\n\r\n  const { id, name, username, email } = currentUserRx; // error when currentUser is null\r\n\r\n  return (\r\n    <div className=\"container text-center\">\r\n      <div className=\"card\">\r\n        <h1>\r\n          Hi,\r\n          {username || 'Default Username'} {id || 'no id'}\r\n        </h1>\r\n        <ul style={{ listStyle: 'none' }}>\r\n          <li>\r\n            Name:\r\n            {` ${name || 'default name'}`}\r\n          </li>\r\n          <li>\r\n            Email:\r\n            {` ${email || 'default email'}`}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReadPage);\r\n","import React from 'react';\r\n\r\nexport default function ErrorPage() {\r\n  return (\r\n    <div className=\"container text-center\">\r\n      <div className=\"card\">\r\n        <h1>Error Page</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction TableActionBtns({ delUser, editUser, id }) {\r\n  return (\r\n    <td>\r\n      <div className=\"btn-group\">\r\n        <Link to={`/read/${id}`} type=\"button\" className=\"btn btn-sm btn-info\">\r\n          Read\r\n        </Link>\r\n\r\n        <button\r\n          onClick={e => editUser(e, id)}\r\n          type=\"button\"\r\n          className=\"btn btn-sm btn-primary\"\r\n        >\r\n          Edit\r\n        </button>\r\n\r\n        <button\r\n          onClick={e => delUser(e, id)}\r\n          type=\"button\"\r\n          className=\"btn btn-sm btn-outline-danger\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </td>\r\n  );\r\n}\r\n\r\nexport default TableActionBtns;\r\n","import React from 'react';\r\n// import PropTypes from 'prop-types';\r\n\r\nexport default class EditRow extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: props.name,\r\n      username: props.username,\r\n      email: props.email\r\n    };\r\n    this.handleChangeInput = this.handleChangeInput.bind(this);\r\n    this.handleUpdateBtn = this.handleUpdateBtn.bind(this);\r\n    this.handleCancelBtn = this.handleCancelBtn.bind(this);\r\n  }\r\n\r\n  handleChangeInput(e) {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({ [name]: value });\r\n  }\r\n\r\n  handleUpdateBtn(e) {\r\n    const { id } = this.props;\r\n    const { name, username, email } = this.state;\r\n\r\n    this.props.updateUser(e, { id, name, username, email });\r\n  }\r\n\r\n  handleCancelBtn(e) {\r\n    const nullId = null;\r\n    this.props.editUser(e, nullId);\r\n  }\r\n\r\n  render() {\r\n    const { name, username, email } = this.state;\r\n    return (\r\n      <tr>\r\n        <td>{this.props.id}</td>\r\n        <td>\r\n          <input\r\n            onChange={this.handleChangeInput}\r\n            type=\"text\"\r\n            value={name}\r\n            name=\"name\"\r\n            placeholder=\"Enter Name\"\r\n            className=\"form-control\"\r\n          />\r\n        </td>\r\n        <td>\r\n          <input\r\n            onChange={this.handleChangeInput}\r\n            type=\"text\"\r\n            value={username}\r\n            name=\"username\"\r\n            placeholder=\"Enter username\"\r\n            className=\"form-control\"\r\n          />\r\n        </td>\r\n        <td>\r\n          <input\r\n            onChange={this.handleChangeInput}\r\n            type=\"email\"\r\n            value={email}\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            className=\"form-control\"\r\n          />\r\n        </td>\r\n        <td className=\"btn-group\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={this.handleUpdateBtn}\r\n            className=\"btn btn-primary \"\r\n          >\r\n            Update\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={this.handleCancelBtn}\r\n            className=\"btn btn-danger\"\r\n          >\r\n            Cancel\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\n// EditRow.propTypes = {\r\n//   price: PropTypes.number.isRequired\r\n// };\r\n","import React from 'react';\r\n// import Proptypes from 'prop-types';\r\nimport TableActionBtns from './TableActionBtns';\r\nimport EditRow from './EditRow';\r\n\r\nfunction TableBodyRows({\r\n  editing,\r\n  currentId,\r\n  id,\r\n  name,\r\n  username,\r\n  email,\r\n  delUser,\r\n  editUser,\r\n  addUser,\r\n  updateUser\r\n}) {\r\n  if (editing && id === currentId) {\r\n    return (\r\n      <EditRow\r\n        addUser={addUser}\r\n        editUser={editUser}\r\n        updateUser={updateUser}\r\n        currentId={currentId}\r\n        id={id}\r\n        name={name}\r\n        username={username}\r\n        email={email}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <tr>\r\n      <td>{id}</td>\r\n      <td>{name}</td>\r\n      <td>{username || '-'}</td>\r\n      <td>{email || '-'}</td>\r\n      <TableActionBtns id={id} editUser={editUser} delUser={delUser} />\r\n    </tr>\r\n  );\r\n}\r\n\r\n// TableBodyRows.propTypes = {};\r\n\r\nexport default TableBodyRows;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n// import Proptypes from 'prop-types';\r\n\r\n// action\r\nimport { searchUser } from '../redux/actions';\r\n\r\n// redux state\r\nconst mapStateToProps = state => {\r\n  return {\r\n    inputValueRx: state.userReducer.inputValue\r\n  };\r\n};\r\n\r\nfunction SearchField(props) {\r\n  const { inputValueRx, dispatch } = props;\r\n\r\n  return (\r\n    <input\r\n      type=\"search\"\r\n      name=\"search\"\r\n      className=\"form-control w-75\"\r\n      value={inputValueRx}\r\n      placeholder=\"Search...\"\r\n      onChange={e => dispatch(searchUser(e.target.value))}\r\n    />\r\n  );\r\n}\r\n\r\nexport default connect(mapStateToProps)(SearchField);\r\n","import React from 'react';\r\n// import InputField from './InputField';\r\n\r\nexport default class AddRow extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: '',\r\n      username: '',\r\n      email: ''\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    // this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(e) {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({ [name]: value });\r\n  }\r\n\r\n  handleClick(e) {\r\n    e.preventDefault();\r\n    const { nextId, addUser } = this.props;\r\n    const { name, username, email } = this.state;\r\n\r\n    addUser(e, { name, username, email, nextId });\r\n\r\n    // reset this.state, after clicked\r\n    this.setState({\r\n      name: '',\r\n      username: '',\r\n      email: ''\r\n    });\r\n  }\r\n\r\n  // handleSubmit(e) {\r\n  //   e.preventDefault();\r\n  //   const { nextId, addUser } = this.props;\r\n  //   const { name, username, email } = this.state;\r\n\r\n  //   addUser(e, { name, username, email, nextId });\r\n  //   console.log(e);\r\n  //   // reset this.state, after clicked\r\n  //   this.setState({\r\n  //     name: '',\r\n  //     username: '',\r\n  //     email: ''\r\n  //   });\r\n  // }\r\n\r\n  render() {\r\n    const { nextId } = this.props;\r\n    const { name, username, email } = this.state;\r\n\r\n    return (\r\n      <tr>\r\n        <td>{nextId}</td>\r\n        <td>\r\n          <input\r\n            onChange={this.handleChange}\r\n            type=\"text\"\r\n            value={name}\r\n            name=\"name\"\r\n            placeholder=\"Enter Name\"\r\n            className=\"form-control\"\r\n          />\r\n        </td>\r\n        <td>\r\n          <textarea\r\n            onChange={this.handleChange}\r\n            value={username}\r\n            name=\"username\"\r\n            placeholder=\"Enter username\"\r\n            className=\"form-control\"\r\n            rows=\"1\"\r\n          />\r\n        </td>\r\n        <td>\r\n          <input\r\n            onChange={this.handleChange}\r\n            type=\"email\"\r\n            value={email}\r\n            name=\"email\"\r\n            placeholder=\"enter email\"\r\n            className=\"form-control\"\r\n          />\r\n          {/* <InputField\r\n            onChange={this.handleChange}\r\n            type=\"email\"\r\n            value={email}\r\n            name=\"email\"\r\n            placeholder=\"enter email\"\r\n          /> */}\r\n        </td>\r\n        <td>\r\n          <button\r\n            type=\"button\"\r\n            onClick={this.handleClick}\r\n            className=\"btn btn-success btn-block\"\r\n          >\r\n            Add User\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Warning({ isLoading, isError, msg }) {\r\n  return (\r\n    <h4\r\n      className={`alert ${(isLoading || isError) &&\r\n        'alert-danger'} alert-success  text-center mb-0`}\r\n    >\r\n      {(isError || isLoading || msg) && msg}\r\n    </h4>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport uuid from 'uuid';\r\nimport TableBodyRows from './TableBodyRows';\r\nimport SearchField from './SearchField';\r\nimport AddRow from './AddRow';\r\nimport Warning from './Warning';\r\n\r\nfunction Table({\r\n  users,\r\n  otherProps: { isLoadingRx, isErrorRx, msgRx },\r\n  updateUser,\r\n  delUser,\r\n  addUser,\r\n  editUser,\r\n  editing,\r\n  currentId\r\n}) {\r\n  // nextId is the id at 'addUser row',\r\n  // which will be the id for 'newUser'\r\n  // if there is no data item, set the 'nextId' to 1\r\n  const nextId = users.length ? +users[users.length - 1].id + 1 : 1;\r\n  // checks for alerts or alert msg\r\n  const hasAlert = isLoadingRx || isErrorRx || msgRx;\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"card mx-auto\">\r\n        <div className=\"card-header text-white bg-info clearfix\">\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <h3>Users Table</h3>\r\n            </div>\r\n            <div className=\"col\">\r\n              <SearchField />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {hasAlert && (\r\n          <Warning isLoading={isLoadingRx} isError={isErrorRx} msg={msgRx} />\r\n        )}\r\n        <div className=\"card-body\">\r\n          <form>\r\n            <table className=\"table table-striped\">\r\n              <thead>\r\n                <tr>\r\n                  <th>ID</th>\r\n                  <th>Name</th>\r\n                  <th>Username</th>\r\n                  <th>Email</th>\r\n                  <th>Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {users.length > 0 ? (\r\n                  users.map((user) => {\r\n                    return (\r\n                      <TableBodyRows\r\n                        key={uuid.v4()}\r\n                        id={user.id}\r\n                        name={user.name}\r\n                        username={user.username}\r\n                        email={user.email}\r\n                        updateUser={updateUser}\r\n                        delUser={delUser}\r\n                        editUser={editUser}\r\n                        addUser={addUser}\r\n                        editing={editing}\r\n                        currentId={currentId}\r\n                      />\r\n                    );\r\n                  })\r\n                ) : (\r\n                  <tr>\r\n                    <td> </td>\r\n                    <td> </td>\r\n                    <td colSpan={5}>Sorry, No User Available</td>\r\n                  </tr>\r\n                )}\r\n\r\n                <AddRow nextId={nextId} addUser={addUser} />\r\n              </tbody>\r\n            </table>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Table from './Table';\r\n\r\n// redux action\r\nimport {\r\n  deleteUser,\r\n  addUser,\r\n  updateUser,\r\n  fetchAllUsers\r\n} from '../redux/actions';\r\n\r\n// redux dispatch actions\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addUserRx: (user) => dispatch(addUser(user)),\r\n    deleteUserRx: (id) => dispatch(deleteUser(id)),\r\n    updateUserRx: (id) => dispatch(updateUser(id)),\r\n    fetchUsersRx: () => dispatch(fetchAllUsers())\r\n  };\r\n};\r\n\r\n// redux states\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    inputValueRx: state.userReducer.inputValue,\r\n    usersRx: state.userReducer.users,\r\n    isLoadingRx: state.userReducer.isLoading,\r\n    isErrorRx: state.userReducer.isError,\r\n    msgRx: state.userReducer.msg\r\n  };\r\n};\r\n\r\n// Main Comp\r\nclass Main extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      status: { isEditing: false, currentId: null },\r\n      alerts: {\r\n        isEmpty: false,\r\n        alertMsg: ''\r\n      }\r\n    };\r\n    this.onDelUser = this.onDelUser.bind(this);\r\n    this.onAddUser = this.onAddUser.bind(this);\r\n    this.onEditUser = this.onEditUser.bind(this);\r\n    this.onUpdateUser = this.onUpdateUser.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // return ALL Users\r\n    this.props.fetchUsersRx();\r\n  }\r\n\r\n  onDelUser(e, id) {\r\n    // on editing mode, you cant click delete btn\r\n    if (this.state.status.isEditing) return;\r\n\r\n    this.props.deleteUserRx(id);\r\n  }\r\n\r\n  onEditUser(e, id) {\r\n    // toggles the 'isEditing'\r\n    this.setState((prevState) => {\r\n      return {\r\n        status: {\r\n          isEditing: !prevState.status.isEditing,\r\n          currentId: id\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onUpdateUser(e, { id, name, username, email }) {\r\n    if (!name.trim() || !username.trim() || !email.trim()) {\r\n      this.setState((prevState) => {\r\n        return {\r\n          alerts: { ...prevState.alerts, isEmpty: true, alertMsg: 'Enter Text' }\r\n        };\r\n      });\r\n      return;\r\n    }\r\n\r\n    // updating the data (users)\r\n\r\n    const updatedUsers = this.props.usersRx.map((user) => {\r\n      let newUser = null;\r\n      if (user.id === id) {\r\n        // eslint-disable-next-line no-param-reassign\r\n        newUser = { id, name, username, email };\r\n      }\r\n      return newUser || user;\r\n    });\r\n\r\n    // update redux\r\n    this.props.updateUserRx(updatedUsers);\r\n\r\n    // reset the status to default\r\n    this.setState({ status: { isEditing: false, currentId: null } });\r\n  }\r\n\r\n  onAddUser(e, { name, username, email, nextId }) {\r\n    if (!name.trim() || !username.trim() || !email.trim()) {\r\n      this.setState((prevState) => {\r\n        return {\r\n          alerts: { ...prevState, isEmpty: true, alertMsg: 'Enter Text' }\r\n        };\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.props.addUserRx({ id: nextId, name, username, email });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      status: { isEditing, currentId }\r\n    } = this.state;\r\n\r\n    const { inputValueRx, usersRx, ...otherProps } = this.props;\r\n\r\n    const filteredUsers = usersRx.filter((user) => {\r\n      return user.name\r\n        .toLowerCase()\r\n        .includes(inputValueRx.toLowerCase().trim());\r\n    });\r\n\r\n    return (\r\n      <main>\r\n        <Table\r\n          otherProps={otherProps}\r\n          users={filteredUsers}\r\n          delUser={this.onDelUser}\r\n          addUser={this.onAddUser}\r\n          editUser={this.onEditUser}\r\n          updateUser={this.onUpdateUser}\r\n          editing={isEditing}\r\n          currentId={currentId}\r\n        />\r\n\r\n        <div style={{ height: '300px' }} />\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\r\n","import React from 'react';\r\nimport Main from '../components/Main';\r\n\r\nexport default function HomePage() {\r\n  return <Main />;\r\n}\r\n","import {\r\n  DEL_USER,\r\n  ADD_USER,\r\n  UPD_USER,\r\n  SEARCH_USER,\r\n  GET_USERS,\r\n  GET_USER,\r\n  IS_LOADING,\r\n  IS_SUCCESS,\r\n  IS_ERROR,\r\n  RESET,\r\n  IS_EDITING\r\n} from './types';\r\n\r\n// import userData from '../users.json';\r\n\r\nconst initialState = {\r\n  inputValue: '',\r\n  users: [],\r\n  currentUser: null, // null (cause error) or {}, [upd] null is easy to handle error\r\n  isEditing: false,\r\n  isLoading: false,\r\n  isSuccess: false,\r\n  isError: false,\r\n  msg: ''\r\n};\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const userReducer = (state = initialState, action = {}) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (action.type) {\r\n    case IS_LOADING:\r\n      return { ...state, isLoading: true, msg: action.payload };\r\n    case IS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isSuccess: true,\r\n        msg: action.payload\r\n      };\r\n    case IS_ERROR:\r\n      return { ...state, isLoading: false, isError: true, msg: action.payload };\r\n\r\n    case RESET:\r\n      return {\r\n        ...state,\r\n        msg: '',\r\n        isError: false,\r\n        isLoading: false,\r\n        isSuccess: false\r\n      };\r\n    case GET_USER:\r\n      return {\r\n        ...state,\r\n        users: initialState.users,\r\n        currentUser: action.payload\r\n      };\r\n\r\n    case GET_USERS:\r\n      return {\r\n        ...state,\r\n        currentUser: initialState.currentUser,\r\n        users: action.payload\r\n      };\r\n    case ADD_USER:\r\n      return { ...state, users: [...state.users, action.payload] };\r\n    case DEL_USER:\r\n      return {\r\n        ...state,\r\n        users: state.users.filter((user) => user.id !== action.payload)\r\n      };\r\n    case IS_EDITING:\r\n      return { ...state, isEditing: action.payload };\r\n    case UPD_USER:\r\n      return { ...state, users: action.payload, isEditing: false };\r\n    case SEARCH_USER:\r\n      return {\r\n        ...state,\r\n        inputValue: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\r\n\r\nimport { createLogger } from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\n\r\n// reducers\r\nimport { userReducer } from './reducers';\r\n\r\n// middlewares\r\nconst middlewares = [thunk];\r\n\r\n// use logger in developement\r\nif (process.env.NODE_ENV === 'development') {\r\n  const logger = createLogger();\r\n  middlewares.push(logger); // logger is last,, [..., logger]\r\n}\r\n\r\n// rootReducer and store\r\nconst rootReducer = combineReducers({ userReducer });\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\r\n\r\nimport App from './App';\r\nimport './bootstrap.min.css';\r\n\r\n// redux store\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n// import './App.css';\r\n\r\n// comps.\r\nimport Header from './components/Header';\r\nimport Back from './components/Back';\r\nimport ErrorBoundary from './components/ErrorBoundary';\r\n\r\n// page\r\nimport ReadPage from './pages/ReadPage';\r\nimport ErrorPage from './pages/ErrorPage';\r\nimport HomePage from './pages/HomePage';\r\n\r\nexport default function App() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Route exact path=\"/read/:id\" component={Back} />\r\n      <ErrorBoundary>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={HomePage} />\r\n          <Route exact path=\"/read/:id\" component={ReadPage} />\r\n          <Route component={ErrorPage} />\r\n        </Switch>\r\n      </ErrorBoundary>\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}